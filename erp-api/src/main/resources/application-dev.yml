server:
  port: 8080

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${CLIENT_ID}
            clientSecret: ${CLIENT_SECRET}
            redirectUri: "{baseUrl}/login/oauth2/code/google"
            scope:
              - email
              - profile
              - openid
          auth-server:
            client-id: "erp-api"
            client-secret: "secret"
            redirect-uri: "http://localhost:8080/login/oauth2/code/auth-server"
            authorization-grant-type: "authorization_code"
            client-authentication-method: "client_secret_basic"
            scope:
              - user.read
              - user.write
              - openid
              - profile
        provider:
          google:
            authorizationUri: https://accounts.google.com/o/oauth2/auth
            tokenUri: https://oauth2.googleapis.com/token
            userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
            userNameAttribute: sub
            jwkSetUri: https://www.googleapis.com/oauth2/v3/certs
          auth-server:
            issuer-uri: http://localhost:8081
            authorization-uri: http://localhost:8081/oauth2/authorize
            token-uri: http://localhost:8081/oauth2/token
            user-info-uri: http://localhost:8081/userinfo
  datasource:
    url: jdbc:mysql://localhost:3306/human_capital_management_dev
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create
logging:
  level:
    org:
      springframework:
        web: DEBUG
        security: DEBUG